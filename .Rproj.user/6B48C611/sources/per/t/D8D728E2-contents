// The input data is a vector 'y' of length 'trials'.
data {
  
  int<lower=1> trials; //integer variable that can't take on value less than 1
  vector[trials] Choice; //you need to specify length of vector!!! outcome - 
  // NB make prevChoice from this
  //vector[trials - 1] prevChoice; 
  vector[trials] feedback; 
  vector[2] initialValue; //expected value before start
  
}

// The parameters accepted by the model. Our model
// accepts two parameters 'learningRate' and 'invTemperature'.
parameters {
  
  real<lower=0, upper=1> learningRate;
  real logInvTemperature;
  
}

transformed parameters {
  
  real<lower=0.001> invTemperature;
  invTemperature = exp(logInvTemperature);
  
}

// The model to be estimated.
model {
  
  vector[2] Value;
  vector[2] rate;
  
  learningRate ~ beta(2, 2); //hist(rbeta(1000, 2, 2))
  logInvTemperature ~ normal(0, 1);
  
  Value = initialValue;
  
  for (t in 1:trials){
    
    rate = softmax(invTemperature * Value);
    choice[t] ~ categorical(rate);
    
    predError = feedback[t] - Value;
    Value = Value + learningRate * predError;
    
  }
  
}

